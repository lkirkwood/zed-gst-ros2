FROM docker.io/alpine/git:latest AS rcl_interfaces

RUN git clone https://github.com/ros2/rcl_interfaces.git -b humble /opt

FROM docker.io/ros:humble

RUN apt-get update

# Install GStreamer
RUN dpkg -P opencv-dev opencv-libs
RUN apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev \
    gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 \
    gstreamer1.0-qt5 gstreamer1.0-pulseaudio libgirepository1.0-dev gcc libcairo2-dev pkg-config python3-dev \
    gir1.2-gtk-3.0 python3 python3-pip && python3 -m pip install pycairo pygobject

# Install CUDA
RUN apt-get install -y wget linux-headers-$(uname -r) && apt-key del 7fa2af80 && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb && \
    dpkg -i cuda-keyring_1.1-1_all.deb && apt-get update && apt-get install -y cuda-toolkit
ENV PATH=/usr/local/cuda/bin:/usr/local/cuda/lib64/stubs:$PATH

# Install ZED2 SDK
ENV LOGNAME root
ENV DEBIAN_FRONTEND noninteractive
RUN apt-get install --no-install-recommends lsb-release less zstd udev sudo apt-transport-https -y && \
    wget -q --no-check-certificate -O ZED_SDK_Linux.run https://download.stereolabs.com/zedsdk/4.1/cu121/ubuntu22 && \
    chmod +x ZED_SDK_Linux.run ; ./ZED_SDK_Linux.run silent runtime_only && \
    rm -rf /usr/local/zed/resources/* \
    rm -rf ZED_SDK_Linux.run && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean

# Install GStreamer ROS bridge
RUN mkdir -p /opt/workspace/src
RUN git clone https://github.com/BrettRD/ros-gst-bridge -b develop /opt/workspace/src/gst_bridge

# Install Zed GStreamer plugin
RUN git clone https://github.com/stereolabs/zed-gstreamer.git /opt/workspace/src/zed-gstreamer && \
    touch /opt/workspace/src/zed-gstreamer/COLCON_IGNORE && mkdir /opt/workspace/src/zed-gstreamer/build && \
    cd /opt/workspace/src/zed-gstreamer/build && cmake -DCMAKE_LIBRARY_PATH= -DCMAKE_BUILD_TYPE=Release .. && \
    make && make install && ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1

COPY utsma_deps.tar.gz /opt/workspace/src/
RUN cd /opt/workspace/src && tar -xvzf utsma_deps.tar.gz

WORKDIR /opt/workspace/src/utsma_lifecycle_manager_msgs
RUN . /opt/ros/humble/setup.sh && mkdir build && cd build && cmake .. && make && make install

WORKDIR /opt/workspace/src/utsma_common
RUN . /opt/ros/humble/setup.sh && mkdir build && cd build && cmake -DBUILD_TESTING=OFF .. && make && make install

# Build and setup environment
WORKDIR /opt/workspace
COPY . /opt/workspace/src/zed-gst-ros2
RUN . /opt/ros/humble/setup.sh && \
    apt-get update && \
    rosdep update && \
    rosdep install --ignore-src -r -y --from-path src && \
    colcon build --cmake-args="-DBUILD_TESTING=OFF"

ENV GST_PLUGIN_PATH=/opt/workspace/install/gst_bridge/lib/gst_bridge
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs

RUN chmod +x /opt/workspace/src/zed-gst-ros2/entrypoint-amd64.sh
ENTRYPOINT ["/opt/workspace/src/zed-gst-ros2/entrypoint-amd64.sh"]
